import asyncio
import logging
import os

from aiogram.filters import Command
from dotenv import load_dotenv
load_dotenv()

from aiogram import Bot, Dispatcher, types
from loguru import logger

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
logger.remove()
# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–∞–π–ª–æ–≤
logger.add(
    "loggs.log",
    format="{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}",
    level="INFO",
    rotation="5 MB",  # –†–æ—Ç–∞—Ü–∏—è —Ñ–∞–π–ª–∞ –∫–∞–∂–¥—ã–µ 10 MB
    retention="10 days",  # –•—Ä–∞–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–æ–≥–æ–≤
    compression="zip",  # –°–∂–∏–º–∞—Ç—å —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ –≤ –∞—Ä—Ö–∏–≤
    backtrace=True,     # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏ –æ—à–∏–±–æ–∫
    diagnose=True       # –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥
)

TOKEN = os.getenv('iamgroot')

bot = Bot(token=TOKEN)
dp = Dispatcher()


@dp.message(Command(commands="start"))
async def start_handler(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–±–æ—Ç–∞—é –≤ Docker üê≥")


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
        logger.info('–≤–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞')
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.exception('–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞')